plugins { // Новый способ подключения
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

plugins {  // Старый способ подключения
    //id 'com.android.application'  // заменено алиасом
    //id 'org.jetbrains.kotlin.android'  // заменено алиасом

    id 'org.jetbrains.kotlin.kapt'    // ROOM
    //id 'com.google.gms.google-services'   // Notifications & Pushes
    //id 'com.google.dagger.hilt.android'   // Dependency Injection
}

android {
    namespace 'ru.netology.nework'
    compileSdk 34

    defaultConfig {
        applicationId "ru.netology.nework"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        // Использование переменной из файла local.properties
        // (рассчитывается в build.gradle уровня проекта)
        buildConfigField "String", "SERVER_API_KEY", "\"${serverApiKey}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            //manifestPlaceholders.usesCleartextTraffic = false  //Доступ к серверу по https в релизном варианте приложения
            manifestPlaceholders.usesCleartextTraffic = true  // Доступ к серверу по http
        }
        debug {
            manifestPlaceholders.usesCleartextTraffic = true  // Доступ к серверу по http
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
//-------------------------
// Новый способ подключения
//-------------------------

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    //androidx.activity:activity:1.9.0 - ОТЛИЧАЕТСЯ ОТ проекта ДЗ! (отсутствует -ktx)
    //Сами добавим androidx.activity-ktx:activity:1.9.0 в файле lib.versions.toml
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout

    /*// Не сработало, хотя синхронизация прошла
     // Retrofit
     implementation libs.retrofit2.retrofit
     implementation libs.retrofit2.gson
     implementation libs.retrofit2.okhttp.interceptor // это библиотека okhttp, использующаяся внутри retrofit*/

//-------------------------
// Старый способ подключения
//-------------------------

    // ViewModel & Lifecycle (versions)
    def lifecycle_version = "2.5.1"

    // Fragments & Navigation (versions)
    def fragment_version = "1.5.5"
    def nav_version = "2.5.3"

    // Recycler View & Layouts (versions)
    def recyclerview_version = "1.2.1"
    def swiperefreshlayout_version = "1.1.0"
    def coordinatorlayout_version = "1.2.0"

    // ROOM (versions)
    def room_version = "2.4.3"   // "2.5.0" - более свежая версия

    // Retrofit (versions)
    def retrofit_version = "2.9.0"
    def retrofitgson_version = "2.9.0"
    def retrofitokhttplogging_version = "4.10.0"

    // Notifications & Pushes (versions)
    def firebase_version = "31.0.2"
    def play_services_base_version = "18.1.0"

    // Glide & Image Picker (versions)
    def glide_version = "4.14.2" // "4.15.1" - более свежая версия
    def imagepicker_version = "2.1"

    def coroutines_version = "1.7.1"


    // Dagger Hilt (versions)
    def hilt_version = "2.44"   // ТА ЖЕ ВЕРСИЯ, что и в Project build.gradle

    // Paging (versions)
    def paging_version = "3.2.1"

    //

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Так было в ДЗ, но тут автоматически сформировалось БЕЗ ktx
    //implementation "androidx.activity:activity-ktx:1.6.1"

    // ViewModel & Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Fragments & Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Это еще нужно? или все есть в navigation-fragment-ktx ?
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Recycler View
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    // ROOM
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-common:$room_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitgson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofitokhttplogging_version"

    // Обработка картинок
    implementation "com.github.bumptech.glide:glide:$glide_version"
    // Загрузка изображений на сервер, продвинутая работа с изображениями
    implementation "com.github.dhaval2404:imagepicker:$imagepicker_version"
    // Требует добавления в список репозиториев в файле settings.gradle строки maven { url "https://jitpack.io" }

    // Корутины в Andorid
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.room:room-ktx:$room_version"   // расширение для ROOM, чтобы она работала с корутинами

    // SwipeRefreshLayout - часть разметки для обработки "протаскивания"; CoordinatorLayout - тоже часть разметки
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayout_version"


    // Notifications & Pushes
//    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
//    implementation "com.google.firebase:firebase-messaging-ktx"
//    implementation "com.google.android.gms:play-services-base:$play_services_base_version" // Проверка доступности Google APIs
//    // 2 этап рассылки уведомлений (на корутинах)
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"


    // Dependency Injection (Dagger Hilt)
//    implementation "com.google.dagger:hilt-android:$hilt_version"
//    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Пагинация
//    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
//    implementation "androidx.room:room-paging:$room_version"    // это добавляем, когда начинаем сохранять страницы локально



    //-------------------------
    // Tests - добавлены автоматически (Новый способ подключения)
    //-------------------------
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}
